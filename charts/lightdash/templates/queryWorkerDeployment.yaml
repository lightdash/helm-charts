{{- if .Values.queryWorker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightdash.fullname" . }}-query-worker
  labels:
    {{- include "lightdash.labels" . | nindent 4 }}
    app.kubernetes.io/component: query-worker
spec:
  replicas: {{ .Values.queryWorker.replicas }}
  selector:
    matchLabels:
      {{- include "lightdash.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: query-worker
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        {{- include "lightdash.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: query-worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "lightdash.serviceAccountName" . }}
      containers:
        {{- if .Values.extraContainers }}
          {{- toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "dist/queryWorker.js"]
          args: {{ .Values.image.args }}
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ (include "lightdash.database.secretName" .) }}
                  key: {{ (include "lightdash.database.secret.passwordKey" .) }}
            - name: PORT
              value: {{ .Values.queryWorker.port | quote }}
            - name: SCHEDULER_INCLUDE_TASKS
              value: "{{ .Values.queryWorker.tasks.include }}"
            - name: SCHEDULER_EXCLUDE_TASKS
              value: "{{ .Values.queryWorker.tasks.exclude }}"
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
            {{- if .Values.schedulerExtraEnv }}
            {{- toYaml .Values.schedulerExtraEnv | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "lightdash.fullname" $ }}
            {{ if .Values.secrets }}
            - secretRef:
                name: {{ template "lightdash.fullname" $ }}
            {{ end }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.queryWorker.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.queryWorker.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.queryWorker.livenessProbe.periodSeconds }}
            httpGet:
              path: /api/v1/health
              port: {{ .Values.queryWorker.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.queryWorker.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.queryWorker.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.queryWorker.readinessProbe.timeoutSeconds }}
            httpGet:
              path: /api/v1/health
              port: {{ .Values.queryWorker.port }}
          resources:
            {{- toYaml .Values.queryWorker.resources | nindent 12 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.queryWorker.terminationGracePeriodSeconds | default 90 }}
{{- end }}
